openapi: 3.0.2
info:
  contact:
    email: sayandeep@ispirt.in
  description: |-
    This is a sample UasType Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [http://swagger.io](http://swagger.io). In the third iteration of the uasType store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    Some useful links:
    - [The UasType Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the UasType Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Pushpaka Registry
  version: 1.0.17
externalDocs:
  description: Find out more about Pushpaka
  url: https://ispirt.github.io/pushpaka/
servers:
- url: /api/v1
tags:
- description: UAS Types
  name: uas_type
- description: UAS
  name: uas
- description: Operations about user
  name: user
paths:
  /uasType:
    post:
      description: Add a new uasType to the store
      operationId: addUasType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UasType'
        description: Create a new uasType in the store
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UasType'
          description: Successful operation
        "405":
          description: Invalid input
      security:
      - registry_auth:
        - write:uasTypes
        - read:uasTypes
      summary: Add a new uasType to the store
      tags:
      - uas_types
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: uas_types
    put:
      description: Update an existing uasType by Id
      operationId: updateUasType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UasType'
        description: Update an existent uasType in the store
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UasType'
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: UasType not found
        "405":
          description: Validation exception
      security:
      - registry_auth:
        - write:uasTypes
        - read:uasTypes
      summary: Update an existing uasType
      tags:
      - uas_types
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: uas_types
  /uasType/findByStatus:
    get:
      description: Multiple status values can be provided with comma separated strings
      operationId: findUasTypesByStatus
      parameters:
      - description: Status values that need to be considered for filter
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: available
          enum:
          - available
          - pending
          - sold
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UasType'
                type: array
          description: successful operation
        "400":
          description: Invalid status value
      security:
      - registry_auth:
        - write:uasTypes
        - read:uasTypes
      summary: Finds UasTypes by status
      tags:
      - uas_types
      x-accepts: application/json
      x-tags:
      - tag: uas_types
  /uasType/find:
    get:
      operationId: findUasTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UasType'
                type: array
          description: successful operation
        "400":
          description: Invalid value
      security:
      - registry_auth:
        - write:uasTypes
        - read:uasTypes
      summary: Finds UasTypes
      tags:
      - uas_types
      x-accepts: application/json
      x-tags:
      - tag: uas_types
  /uasType/{uasTypeId}:
    delete:
      description: ""
      operationId: deleteUasType
      parameters:
      - description: ""
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          type: string
        style: simple
      - description: UasType id to delete
        explode: false
        in: path
        name: uasTypeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "400":
          description: Invalid uasType value
      security:
      - registry_auth:
        - write:uasTypes
        - read:uasTypes
      summary: Deletes a uasType
      tags:
      - uas_types
      x-accepts: application/json
      x-tags:
      - tag: uas_types
    get:
      description: Returns a single uasType
      operationId: getUasTypeById
      parameters:
      - description: ID of uasType to return
        explode: false
        in: path
        name: uasTypeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UasType'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: UasType not found
      security:
      - api_key: []
      - registry_auth:
        - write:uasTypes
        - read:uasTypes
      summary: Find uasType by ID
      tags:
      - uas_types
      x-accepts: application/json
      x-tags:
      - tag: uas_types
    post:
      description: ""
      operationId: updateUasTypeWithForm
      parameters:
      - description: ID of uasType that needs to be updated
        explode: false
        in: path
        name: uasTypeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Name of uasType that needs to be updated
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Status of uasType that needs to be updated
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      responses:
        "405":
          description: Invalid input
      security:
      - registry_auth:
        - write:uasTypes
        - read:uasTypes
      summary: Updates a uasType in the store with form data
      tags:
      - uas_types
      x-accepts: application/json
      x-tags:
      - tag: uas_types
  /uasType/{uasTypeId}/uploadImage:
    post:
      description: ""
      operationId: uploadFile
      parameters:
      - description: ID of uasType to update
        explode: false
        in: path
        name: uasTypeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Additional Metadata
        explode: true
        in: query
        name: additionalMetadata
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/octet-stream:
            schema:
              format: binary
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: successful operation
      security:
      - registry_auth:
        - write:uasTypes
        - read:uasTypes
      summary: uploads an image
      tags:
      - uas_types
      x-content-type: application/octet-stream
      x-accepts: application/json
      x-tags:
      - tag: uas_types
  /uas:
    post:
      description: Add a new uas to the store
      operationId: addUas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Uas'
        description: Create a new uas in the store
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uas'
          description: Successful operation
        "405":
          description: Invalid input
      security:
      - registry_auth:
        - write:uass
        - read:uass
      summary: Add a new uas to the store
      tags:
      - uas
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: uas
    put:
      description: Update an existing uas by Id
      operationId: updateUas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Uas'
        description: Update an existent uas in the store
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uas'
          description: Successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Uas not found
        "405":
          description: Validation exception
      security:
      - registry_auth:
        - write:uass
        - read:uass
      summary: Update an existing uas
      tags:
      - uas
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: uas
  /uas/findByStatus:
    get:
      description: Multiple status values can be provided with comma separated strings
      operationId: findUassByStatus
      parameters:
      - description: Status values that need to be considered for filter
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: available
          enum:
          - available
          - pending
          - sold
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Uas'
                type: array
          description: successful operation
        "400":
          description: Invalid status value
      security:
      - registry_auth:
        - write:uass
        - read:uass
      summary: Finds Uass by status
      tags:
      - uas
      x-accepts: application/json
      x-tags:
      - tag: uas
  /uas/find:
    get:
      operationId: findUass
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Uas'
                type: array
          description: successful operation
        "400":
          description: Invalid value
      security:
      - registry_auth:
        - write:uass
        - read:uass
      summary: Finds Uass
      tags:
      - uas
      x-accepts: application/json
      x-tags:
      - tag: uas
  /uas/{uasId}:
    delete:
      description: ""
      operationId: deleteUas
      parameters:
      - description: ""
        explode: false
        in: header
        name: api_key
        required: false
        schema:
          type: string
        style: simple
      - description: Uas id to delete
        explode: false
        in: path
        name: uasId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "400":
          description: Invalid uas value
      security:
      - registry_auth:
        - write:uass
        - read:uass
      summary: Deletes a uas
      tags:
      - uas
      x-accepts: application/json
      x-tags:
      - tag: uas
    get:
      description: Returns a single uas
      operationId: getUasById
      parameters:
      - description: ID of uas to return
        explode: false
        in: path
        name: uasId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uas'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Uas not found
      security:
      - api_key: []
      - registry_auth:
        - write:uass
        - read:uass
      summary: Find uas by ID
      tags:
      - uas
      x-accepts: application/json
      x-tags:
      - tag: uas
    post:
      description: ""
      operationId: updateUasWithForm
      parameters:
      - description: ID of uas that needs to be updated
        explode: false
        in: path
        name: uasId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: Name of uas that needs to be updated
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Status of uas that needs to be updated
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      responses:
        "405":
          description: Invalid input
      security:
      - registry_auth:
        - write:uass
        - read:uass
      summary: Updates a uas in the store with form data
      tags:
      - uas
      x-accepts: application/json
      x-tags:
      - tag: uas
  /user:
    post:
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Created user object
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: successful operation
      summary: Create user
      tags:
      - user
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: user
  /user/createWithList:
    post:
      description: Creates list of users with given input array
      operationId: createUsersWithListInput
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/User'
              type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful operation
        default:
          description: successful operation
      summary: Creates list of users with given input array
      tags:
      - user
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: user
  /user/login:
    get:
      description: ""
      operationId: loginUser
      parameters:
      - description: The user name for login
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The password for login in clear text
        explode: true
        in: query
        name: password
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              explode: false
              schema:
                format: int32
                type: integer
              style: simple
            X-Expires-After:
              description: date in UTC when token expires
              explode: false
              schema:
                format: date-time
                type: string
              style: simple
        "400":
          description: Invalid username/password supplied
      summary: Logs user into the system
      tags:
      - user
      x-accepts: application/json
      x-tags:
      - tag: user
  /user/logout:
    get:
      description: ""
      operationId: logoutUser
      parameters: []
      responses:
        default:
          description: successful operation
      summary: Logs out current logged in user session
      tags:
      - user
      x-accepts: application/json
      x-tags:
      - tag: user
  /user/{username}:
    delete:
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
      - description: The name that needs to be deleted
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
      summary: Delete user
      tags:
      - user
      x-accepts: application/json
      x-tags:
      - tag: user
    get:
      description: ""
      operationId: getUserByName
      parameters:
      - description: 'The name that needs to be fetched. Use user1 for testing. '
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: successful operation
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
      summary: Get user by user name
      tags:
      - user
      x-accepts: application/json
      x-tags:
      - tag: user
    put:
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
      - description: name that need to be deleted
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Update an existent user in the store
      responses:
        default:
          description: successful operation
      summary: Update user
      tags:
      - user
      x-content-type: application/json
      x-accepts: application/json
      x-tags:
      - tag: user
components:
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
      description: List of user object
  schemas:
    User:
      example:
        firstName: John
        lastName: James
        userStatus: 1
        phone: +919999999999
        timestamps:
          created: 2000-01-23T04:56:07.000+00:00
          updated: 2000-01-23T04:56:07.000+00:00
        id: e66b7c9e-79f5-44b0-9642-59ca20b7af63
        email: john@email.com
        username: theUser
      properties:
        id:
          example: e66b7c9e-79f5-44b0-9642-59ca20b7af63
          format: uuid
          readOnly: true
          type: string
        username:
          example: theUser
          type: string
        firstName:
          example: John
          type: string
        lastName:
          example: James
          type: string
        email:
          example: john@email.com
          type: string
        phone:
          example: +919999999999
          type: string
        userStatus:
          description: User Status
          example: 1
          format: int32
          type: integer
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
      required:
      - email
      - firstName
      - id
      - lastName
      - timestamps
      - username
      type: object
    UasType:
      example:
        photoUrl: https://openapi-generator.tech
        weightCategory: null
        timestamps:
          created: 2000-01-23T04:56:07.000+00:00
          updated: 2000-01-23T04:56:07.000+00:00
        modelNumber: modelNumber
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        mtow: 6.0274563
        propulsionCategory: null
        manufacturer:
          timestamps:
            created: 2000-01-23T04:56:07.000+00:00
            updated: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          validity:
            till: 2000-01-23T04:56:07.000+00:00
            from: 2000-01-23T04:56:07.000+00:00
          legalEntity:
            timestamps:
              created: 2000-01-23T04:56:07.000+00:00
              updated: 2000-01-23T04:56:07.000+00:00
            name: name
            cin: cin
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            regdAddress:
              city: Mumbai
              pinCode: 172074.45705867198
              state: null
              line3: Bandra West
              line2: Landmark
              line1: 123 ABC Housing Society
            gstin: gstin
        supportedOperationCategories:
        - null
        - null
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        modelNumber:
          type: string
        manufacturer:
          $ref: '#/components/schemas/Manufacturer'
        propulsionCategory:
          $ref: '#/components/schemas/UasPropulsionCategory'
        weightCategory:
          $ref: '#/components/schemas/UasWeightCategory'
        mtow:
          description: maximum take off weight in kilograms
          format: float
          type: number
        photoUrl:
          format: uri
          maxLength: 512
          type: string
        supportedOperationCategories:
          items:
            $ref: '#/components/schemas/OperationCategory'
          type: array
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
      required:
      - id
      - manufacturer
      - modelNumber
      - mtow
      - propulsionCategory
      - supportedOperationCategories
      - timestamps
      - weightCategory
      type: object
    UasStatus:
      enum:
      - ACTIVE
      - GROUNDED
      type: string
    Uas:
      example:
        oemSerialNumber: oemSerialNumber
        timestamps:
          created: 2000-01-23T04:56:07.000+00:00
          updated: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type:
          photoUrl: https://openapi-generator.tech
          weightCategory: null
          timestamps:
            created: 2000-01-23T04:56:07.000+00:00
            updated: 2000-01-23T04:56:07.000+00:00
          modelNumber: modelNumber
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          mtow: 6.0274563
          propulsionCategory: null
          manufacturer:
            timestamps:
              created: 2000-01-23T04:56:07.000+00:00
              updated: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            validity:
              till: 2000-01-23T04:56:07.000+00:00
              from: 2000-01-23T04:56:07.000+00:00
            legalEntity:
              timestamps:
                created: 2000-01-23T04:56:07.000+00:00
                updated: 2000-01-23T04:56:07.000+00:00
              name: name
              cin: cin
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              regdAddress:
                city: Mumbai
                pinCode: 172074.45705867198
                state: null
                line3: Bandra West
                line2: Landmark
                line1: 123 ABC Housing Society
              gstin: gstin
          supportedOperationCategories:
          - null
          - null
        status: null
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        type:
          $ref: '#/components/schemas/UasType'
        oemSerialNumber:
          maxLength: 12
          minLength: 6
          type: string
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
        status:
          $ref: '#/components/schemas/UasStatus'
      required:
      - id
      - oemSerialNumber
      - status
      - timestamps
      - type
      type: object
    ApiResponse:
      example:
        code: 0
        type: type
        message: message
      properties:
        code:
          format: int32
          type: integer
        type:
          type: string
        message:
          type: string
      type: object
    OperationCategory:
      enum:
      - C1
      - C2
      - C3
      type: string
    PilotStatus:
      enum:
      - ACTIVE
      - REVOKED
      type: string
    UasWeightCategory:
      enum:
      - NANO
      - SMALL
      - MICRO
      - MEDIUM
      - LARGE
      type: string
    UasPropulsionCategory:
      enum:
      - VTOL
      - FIXED_WING
      - HYBRID
      type: string
    State:
      enum:
      - ANDHRA_PRADESH
      - ARUNACHAL_PRADESH
      - ASSAM
      - BIHAR
      - CHHATTISGARH
      - GOA
      - GUJARAT
      - HARYANA
      - HIMACHAL_PRADESH
      - JHARKHAND
      - KARNATAKA
      - KERALA
      - MADHYA_PRADESH
      - MAHARASHTRA
      - MANIPUR
      - MEGHALAYA
      - MIZORAM
      - NAGALAND
      - ODISHA
      - PUNJAB
      - RAJASTHAN
      - SIKKIM
      - TAMIL_NADU
      - TELANGANA
      - TRIPURA
      - UTTARAKHAND
      - UTTAR_PRADESH
      - WEST_BENGAL
      - ANDAMAN_NICOBAR_ISLANDS
      - CHANDIGARH
      - DADRA_NAGAR_HAVELI_DAMAN_DIU
      - NCT
      - JAMMU_KASHMIR
      - LADAKH
      - LAKSHADWEEP
      - PUDUCHERRY
      type: string
    Address:
      example:
        city: Mumbai
        pinCode: 172074.45705867198
        state: null
        line3: Bandra West
        line2: Landmark
        line1: 123 ABC Housing Society
      properties:
        line1:
          example: 123 ABC Housing Society
          type: string
        line2:
          example: Landmark
          type: string
        line3:
          example: Bandra West
          type: string
        city:
          example: Mumbai
          type: string
        state:
          $ref: '#/components/schemas/State'
        pinCode:
          maximum: 999999
          minimum: 100000
          type: number
      required:
      - city
      - line1
      - line2
      - line3
      - pinCode
      - state
      type: object
    LegalEntity:
      example:
        timestamps:
          created: 2000-01-23T04:56:07.000+00:00
          updated: 2000-01-23T04:56:07.000+00:00
        name: name
        cin: cin
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        regdAddress:
          city: Mumbai
          pinCode: 172074.45705867198
          state: null
          line3: Bandra West
          line2: Landmark
          line1: 123 ABC Housing Society
        gstin: gstin
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        cin:
          type: string
        name:
          type: string
        regdAddress:
          $ref: '#/components/schemas/Address'
        gstin:
          type: string
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
      required:
      - cin
      - id
      - name
      - regdAddress
      - timestamps
      - validity
      type: object
    Manufacturer:
      example:
        timestamps:
          created: 2000-01-23T04:56:07.000+00:00
          updated: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        validity:
          till: 2000-01-23T04:56:07.000+00:00
          from: 2000-01-23T04:56:07.000+00:00
        legalEntity:
          timestamps:
            created: 2000-01-23T04:56:07.000+00:00
            updated: 2000-01-23T04:56:07.000+00:00
          name: name
          cin: cin
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          regdAddress:
            city: Mumbai
            pinCode: 172074.45705867198
            state: null
            line3: Bandra West
            line2: Landmark
            line1: 123 ABC Housing Society
          gstin: gstin
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        legalEntity:
          $ref: '#/components/schemas/LegalEntity'
        validity:
          $ref: '#/components/schemas/Validity'
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
      required:
      - id
      - legalEntity
      - timestamps
      - validity
      type: object
    CivilAviationAuthority:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        legalEntity:
          $ref: '#/components/schemas/LegalEntity'
        validity:
          $ref: '#/components/schemas/Validity'
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
      required:
      - id
      - legalEntity
      - timestamps
      - validity
      type: object
    Validity:
      example:
        till: 2000-01-23T04:56:07.000+00:00
        from: 2000-01-23T04:56:07.000+00:00
      properties:
        from:
          format: date-time
          type: string
        till:
          format: date-time
          type: string
      required:
      - from
      type: object
    ObjectTimestamps:
      example:
        created: 2000-01-23T04:56:07.000+00:00
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
        updated:
          format: date-time
          readOnly: true
          type: string
      required:
      - created
      - updated
      type: object
    Operator:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        legalEntity:
          $ref: '#/components/schemas/LegalEntity'
        validity:
          $ref: '#/components/schemas/Validity'
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
      required:
      - id
      - legalEntity
      - timestamps
      - validity
      type: object
    Pilot:
      properties:
        id:
          format: uuid
          readOnly: true
          type: string
        user:
          $ref: '#/components/schemas/User'
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
        validity:
          $ref: '#/components/schemas/Validity'
      required:
      - id
      - timestamps
      - user
      - validity
      type: object
  securitySchemes:
    registry_auth:
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:uasTypes: modify uasTypes in your account
            read:uasTypes: read your uasTypes
            write:uass: modify uass in your account
            read:uass: read your uass
      type: oauth2
    api_key:
      in: header
      name: api_key
      type: apiKey
