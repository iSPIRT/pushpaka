openapi: 3.0.1
info:
  title: Pushpaka Registry
  description: "This is a sample UasType Store Server based on the OpenAPI 3.0 specification.\
    \  You can find out more about Swagger at [http://swagger.io](http://swagger.io).\
    \ In the third iteration of the uasType store, we've switched to the design first\
    \ approach! You can now help us improve the API whether it's by making changes\
    \ to the definition itself or to the code. That way, with time, we can improve\
    \ the API in general, and expose some of the new features in OAS3.  Some useful\
    \ links: - [The UasType Store repository](https://github.com/swagger-api/swagger-petstore)\
    \ - [The source API definition for the UasType Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)"
  termsOfService: http://swagger.io/terms/
  contact:
    email: sayandeep@ispirt.in
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.17
servers:
- url: http://localhost:8084/
tags:
- name: civilAviationAuthorities
  description: CivilAviationAuthorities
- name: digitalSkyServiceProviders
  description: DigitalSkyServiceProviders
- name: pilot
  description: Pilots
- name: legalEntities
  description: Legal Entity
- name: traders
  description: Traders
- name: uasTypes
  description: the uas_types API
- name: ownership
  description: the ownership API
- name: manufacturers
  description: Manufacturers
- name: operators
  description: Operators
- name: uas
  description: UAS
- name: user
  description: Operations about user
- name: repairAgencies
  description: RepairAgencies
paths:
  /api/v1/user/{username}:
    put:
      tags:
      - user
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
      - name: username
        in: path
        description: name that need to be deleted
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
      security:
      - jwt: []
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
      security:
      - jwt: []
  /api/v1/uas:
    put:
      tags:
      - uas
      summary: Update an existing uas
      description: Update an existing uas by Id
      operationId: updateUas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Uas'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uas'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uas'
        "404":
          description: Uas not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uas'
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uas'
      security:
      - jwt: []
    post:
      tags:
      - uas
      summary: Add a new uas to the store
      description: Add a new uas to the store
      operationId: addUas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Uas'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uas'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uas'
      security:
      - jwt: []
  /api/v1/uasType:
    put:
      tags:
      - uasTypes
      summary: Update an existing uasType
      description: Update an existing uasType by Id
      operationId: updateUasType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UasType'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UasType'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UasType'
        "404":
          description: UasType not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UasType'
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UasType'
      security:
      - jwt: []
    post:
      tags:
      - uasTypes
      summary: Add a new uasType to the store
      description: Add a new uasType to the store
      operationId: addUasType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UasType'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UasType'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UasType'
      security:
      - jwt: []
  /api/v1/trader/{traderId}:
    get:
      tags:
      - traders
      summary: Find trader by ID
      description: Returns a single trader
      operationId: getTraderById
      parameters:
      - name: traderId
        in: path
        description: ID of trader to return
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trader'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trader'
        "404":
          description: Trader not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trader'
      security:
      - jwt: []
    put:
      tags:
      - traders
      summary: Updates a trader in the store
      operationId: updateTrader
      parameters:
      - name: traderId
        in: path
        description: ID of trader that needs to be updated
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trader'
        required: true
      responses:
        "405":
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Trader'
      security:
      - jwt: []
    delete:
      tags:
      - traders
      summary: Deletes a trader
      operationId: deleteTrader
      parameters:
      - name: traderId
        in: path
        description: Trader id to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Invalid trader value
      security:
      - jwt: []
  /api/v1/sale:
    put:
      tags:
      - ownership
      summary: Update an existing sale
      description: Update an existing sale by Id
      operationId: updateSale
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
        "404":
          description: Sale not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
      security:
      - jwt: []
    post:
      tags:
      - ownership
      summary: Add a new sale to the store
      description: Add a new sale to the store
      operationId: addSale
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sale'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
      security:
      - jwt: []
  /api/v1/repairAgency/{repairAgencyId}:
    get:
      tags:
      - repairAgencies
      summary: Find repairAgency by ID
      description: Returns a single repairAgency
      operationId: getRepairAgencyById
      parameters:
      - name: repairAgencyId
        in: path
        description: ID of repairAgency to return
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairAgency'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairAgency'
        "404":
          description: RepairAgency not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairAgency'
      security:
      - jwt: []
    put:
      tags:
      - repairAgencies
      summary: Updates a repairAgency in the store
      operationId: updateRepairAgency
      parameters:
      - name: repairAgencyId
        in: path
        description: ID of repairAgency that needs to be updated
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepairAgency'
        required: true
      responses:
        "405":
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RepairAgency'
      security:
      - jwt: []
    delete:
      tags:
      - repairAgencies
      summary: Deletes a repairAgency
      operationId: deleteRepairAgency
      parameters:
      - name: repairAgencyId
        in: path
        description: RepairAgency id to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Invalid repairAgency value
      security:
      - jwt: []
  /api/v1/pilot/{pilotId}:
    get:
      tags:
      - pilot
      summary: Find pilot by ID
      description: Returns a single pilot
      operationId: getPilotById
      parameters:
      - name: pilotId
        in: path
        description: ID of pilot to return
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pilot'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pilot'
        "404":
          description: Pilot not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pilot'
      security:
      - jwt: []
    put:
      tags:
      - pilot
      summary: Updates a pilot in the store
      operationId: updatePilot
      parameters:
      - name: pilotId
        in: path
        description: ID of pilot that needs to be updated
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pilot'
        required: true
      responses:
        "405":
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Pilot'
      security:
      - jwt: []
    delete:
      tags:
      - pilot
      summary: Deletes a pilot
      operationId: deletePilot
      parameters:
      - name: pilotId
        in: path
        description: Pilot id to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Invalid pilot value
      security:
      - jwt: []
  /api/v1/operator/{operatorId}:
    get:
      tags:
      - operators
      - operator
      summary: Find operator by ID
      description: Returns a single operator
      operationId: getOperatorById
      parameters:
      - name: operatorId
        in: path
        description: ID of operator to return
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operator'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operator'
        "404":
          description: Operator not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operator'
      security:
      - jwt: []
    put:
      tags:
      - operators
      - operator
      summary: Updates a operator in the store
      operationId: updateOperator
      parameters:
      - name: operatorId
        in: path
        description: ID of operator that needs to be updated
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Operator'
        required: true
      responses:
        "405":
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Operator'
      security:
      - jwt: []
    delete:
      tags:
      - operators
      - operator
      summary: Deletes a operator
      operationId: deleteOperator
      parameters:
      - name: operatorId
        in: path
        description: Operator id to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Invalid operator value
      security:
      - jwt: []
  /api/v1/manufacturer/{manufacturerId}:
    get:
      tags:
      - manufacturers
      - manufacturer
      summary: Find manufacturer by ID
      description: Returns a single manufacturer
      operationId: getManufacturerById
      parameters:
      - name: manufacturerId
        in: path
        description: ID of manufacturer to return
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
        "404":
          description: Manufacturer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
      security:
      - jwt: []
    put:
      tags:
      - manufacturers
      - manufacturer
      summary: Updates a manufacturer in the store
      operationId: updateManufacturer
      parameters:
      - name: manufacturerId
        in: path
        description: ID of manufacturer that needs to be updated
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manufacturer'
        required: true
      responses:
        "405":
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Manufacturer'
      security:
      - jwt: []
    delete:
      tags:
      - manufacturers
      - manufacturer
      summary: Deletes a manufacturer
      operationId: deleteManufacturer
      parameters:
      - name: manufacturerId
        in: path
        description: Manufacturer id to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Invalid manufacturer value
      security:
      - jwt: []
  /api/v1/legalEntity/{legalEntityId}:
    get:
      tags:
      - legalEntities
      summary: Find legalEntity by ID
      description: Returns a single legalEntity
      operationId: getLegalEntityById
      parameters:
      - name: legalEntityId
        in: path
        description: ID of legalEntity to return
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntity'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntity'
        "404":
          description: LegalEntity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntity'
      security:
      - jwt: []
    put:
      tags:
      - legalEntities
      summary: Updates a legalEntity in the store
      operationId: updateLegalEntity
      parameters:
      - name: legalEntityId
        in: path
        description: ID of legalEntity that needs to be updated
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalEntity'
        required: true
      responses:
        "405":
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LegalEntity'
      security:
      - jwt: []
    delete:
      tags:
      - legalEntities
      summary: Deletes a legalEntity
      operationId: deleteLegalEntity
      parameters:
      - name: legalEntityId
        in: path
        description: LegalEntity id to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Invalid legalEntity value
      security:
      - jwt: []
  /api/v1/lease:
    put:
      tags:
      - ownership
      summary: Update an existing lease
      description: Update an existing lease by Id
      operationId: updateLease
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lease'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lease'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lease'
        "404":
          description: Lease not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lease'
        "405":
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lease'
      security:
      - jwt: []
    post:
      tags:
      - ownership
      summary: Add a new lease to the store
      description: Add a new lease to the store
      operationId: addLease
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lease'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lease'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lease'
      security:
      - jwt: []
  /api/v1/digitalSkyServiceProvider/{digitalSkyServiceProviderId}:
    get:
      tags:
      - digitalSkyServiceProviders
      - digitalSkyServiceProvider
      summary: Find digitalSkyServiceProvider by ID
      description: Returns a single digitalSkyServiceProvider
      operationId: getDigitalSkyServiceProviderById
      parameters:
      - name: digitalSkyServiceProviderId
        in: path
        description: ID of digitalSkyServiceProvider to return
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSkyServiceProvider'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSkyServiceProvider'
        "404":
          description: DigitalSkyServiceProvider not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSkyServiceProvider'
      security:
      - jwt: []
    put:
      tags:
      - digitalSkyServiceProviders
      - digitalSkyServiceProvider
      summary: Updates a digitalSkyServiceProvider in the store
      operationId: updateDigitalSkyServiceProvider
      parameters:
      - name: digitalSkyServiceProviderId
        in: path
        description: ID of digitalSkyServiceProvider that needs to be updated
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalSkyServiceProvider'
        required: true
      responses:
        "405":
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DigitalSkyServiceProvider'
      security:
      - jwt: []
    delete:
      tags:
      - digitalSkyServiceProviders
      - digitalSkyServiceProvider
      summary: Deletes a digitalSkyServiceProvider
      operationId: deleteDigitalSkyServiceProvider
      parameters:
      - name: digitalSkyServiceProviderId
        in: path
        description: DigitalSkyServiceProvider id to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Invalid digitalSkyServiceProvider value
      security:
      - jwt: []
  /api/v1/civilAviationAuthority/{civilAviationAuthorityId}:
    get:
      tags:
      - civilAviationAuthorities
      - civilAviationAuthority
      summary: Find civilAviationAuthority by ID
      description: Returns a single civilAviationAuthority
      operationId: getCivilAviationAuthorityById
      parameters:
      - name: civilAviationAuthorityId
        in: path
        description: ID of civilAviationAuthority to return
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CivilAviationAuthority'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CivilAviationAuthority'
        "404":
          description: CivilAviationAuthority not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CivilAviationAuthority'
      security:
      - jwt: []
    put:
      tags:
      - civilAviationAuthorities
      - civilAviationAuthority
      summary: Updates a civilAviationAuthority in the store
      operationId: updateCivilAviationAuthority
      parameters:
      - name: civilAviationAuthorityId
        in: path
        description: ID of civilAviationAuthority that needs to be updated
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CivilAviationAuthority'
        required: true
      responses:
        "405":
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CivilAviationAuthority'
      security:
      - jwt: []
    delete:
      tags:
      - civilAviationAuthorities
      - civilAviationAuthority
      summary: Deletes a civilAviationAuthority
      operationId: deleteCivilAviationAuthority
      parameters:
      - name: civilAviationAuthorityId
        in: path
        description: CivilAviationAuthority id to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Invalid civilAviationAuthority value
      security:
      - jwt: []
  /api/v1/user:
    post:
      tags:
      - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
      - jwt: []
  /api/v1/uasType/approve/{uasTypeId}:
    post:
      tags:
      - uasTypes
      summary: Approve a new uasType to the store
      description: Approve a new uasType to the store
      operationId: approveUasType
      parameters:
      - name: uas_type_id
        in: path
        description: UasType ID for the new uasType in the store
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: Model Number assigned to new uasType in the store
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UasType'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UasType'
      security:
      - jwt: []
  /api/v1/trader:
    post:
      tags:
      - traders
      summary: Add a new trader to the store
      description: Add a new trader to the store
      operationId: addTrader
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Trader'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trader'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trader'
      security:
      - jwt: []
  /api/v1/repairAgency:
    post:
      tags:
      - repairAgencies
      summary: Add a new repairAgency to the store
      description: Add a new repairAgency to the store
      operationId: addRepairAgency
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepairAgency'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairAgency'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepairAgency'
      security:
      - jwt: []
  /api/v1/pilot:
    post:
      tags:
      - pilot
      summary: Add a new pilot to the store
      description: Add a new pilot to the store
      operationId: addPilot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pilot'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pilot'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pilot'
      security:
      - jwt: []
  /api/v1/operator:
    post:
      tags:
      - operators
      - operator
      summary: Add a new operator to the store
      description: Add a new operator to the store
      operationId: addOperator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Operator'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operator'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operator'
      security:
      - jwt: []
  /api/v1/manufacturer:
    post:
      tags:
      - manufacturers
      - manufacturer
      summary: Add a new manufacturer to the store
      description: Add a new manufacturer to the store
      operationId: addManufacturer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manufacturer'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manufacturer'
      security:
      - jwt: []
  /api/v1/legalEntity:
    post:
      tags:
      - legalEntities
      summary: Add a new legalEntity to the store
      description: Add a new legalEntity to the store
      operationId: addLegalEntity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalEntity'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntity'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalEntity'
      security:
      - jwt: []
  /api/v1/digitalSkyServiceProvider:
    post:
      tags:
      - digitalSkyServiceProviders
      - digitalSkyServiceProvider
      summary: Add a new digitalSkyServiceProvider to the store
      description: Add a new digitalSkyServiceProvider to the store
      operationId: addDigitalSkyServiceProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalSkyServiceProvider'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSkyServiceProvider'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalSkyServiceProvider'
      security:
      - jwt: []
  /api/v1/civilAviationAuthority:
    post:
      tags:
      - civilAviationAuthorities
      - civilAviationAuthority
      summary: Add a new civilAviationAuthority to the store
      description: Add a new civilAviationAuthority to the store
      operationId: addCivilAviationAuthority
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CivilAviationAuthority'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CivilAviationAuthority'
        "405":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CivilAviationAuthority'
      security:
      - jwt: []
  /api/v1/uasType/{uasTypeId}:
    get:
      tags:
      - uasTypes
      summary: Find uasType by ID
      description: Returns a single uasType
      operationId: getUasTypeById
      parameters:
      - name: uasTypeId
        in: path
        description: ID of uasType to return
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UasType'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UasType'
        "404":
          description: UasType not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UasType'
      security:
      - jwt: []
    delete:
      tags:
      - uasTypes
      summary: Deletes a uasType
      operationId: deleteUasType
      parameters:
      - name: uasTypeId
        in: path
        description: UasType id to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Invalid uasType value
      security:
      - jwt: []
  /api/v1/uasType/find:
    get:
      tags:
      - uasTypes
      summary: Finds UasTypes
      operationId: findUasTypes
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UasType'
        "400":
          description: Invalid value
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UasType'
      security:
      - jwt: []
  /api/v1/uas/{uasId}:
    get:
      tags:
      - uas
      summary: Find uas by ID
      description: Returns a single uas
      operationId: getUasById
      parameters:
      - name: uasId
        in: path
        description: ID of uas to return
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uas'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uas'
        "404":
          description: Uas not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uas'
      security:
      - jwt: []
    delete:
      tags:
      - uas
      summary: Deletes a uas
      operationId: deleteUas
      parameters:
      - name: uasId
        in: path
        description: Uas id to delete
        required: true
        schema:
          type: string
          format: uuid
      - name: api_key
        in: header
        required: false
        schema:
          type: string
      responses:
        "400":
          description: Invalid uas value
      security:
      - jwt: []
  /api/v1/uas/find:
    get:
      tags:
      - uas
      summary: Finds Uass
      operationId: findUass
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Uas'
        "400":
          description: Invalid value
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Uas'
      security:
      - jwt: []
  /api/v1/trader/find:
    get:
      tags:
      - traders
      summary: Finds Traders
      operationId: findTraders
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trader'
        "400":
          description: Invalid value
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Trader'
      security:
      - jwt: []
  /api/v1/sale/{saleId}:
    get:
      tags:
      - ownership
      summary: Find sale by ID
      description: Returns a single sale
      operationId: getSaleById
      parameters:
      - name: saleId
        in: path
        description: ID of sale to return
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
        "404":
          description: Sale not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sale'
      security:
      - jwt: []
    delete:
      tags:
      - ownership
      summary: Deletes a sale
      operationId: deleteSale
      parameters:
      - name: saleId
        in: path
        description: Sale id to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Invalid sale value
      security:
      - jwt: []
  /api/v1/sale/find/{uasId}:
    get:
      tags:
      - ownership
      summary: Finds Sales
      operationId: findSales
      parameters:
      - name: uasId
        in: path
        description: Uas id to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sale'
        "400":
          description: Invalid value
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sale'
      security:
      - jwt: []
  /api/v1/repairAgency/find:
    get:
      tags:
      - repairAgencies
      summary: Finds RepairAgencies
      operationId: findRepairAgencies
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepairAgency'
        "400":
          description: Invalid value
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RepairAgency'
      security:
      - jwt: []
  /api/v1/pilot/find:
    get:
      tags:
      - pilot
      summary: Finds Pilots
      operationId: findPilots
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pilot'
        "400":
          description: Invalid value
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pilot'
      security:
      - jwt: []
  /api/v1/operator/find:
    get:
      tags:
      - operators
      - operator
      summary: Finds Operators
      operationId: findOperators
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Operator'
        "400":
          description: Invalid value
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Operator'
      security:
      - jwt: []
  /api/v1/manufacturer/find:
    get:
      tags:
      - manufacturers
      - manufacturer
      summary: Finds Manufacturers
      operationId: findManufacturers
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Manufacturer'
        "400":
          description: Invalid value
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Manufacturer'
      security:
      - jwt: []
  /api/v1/legalEntity/find:
    get:
      tags:
      - legalEntities
      summary: Finds LegalEntitys
      operationId: findLegalEntitys
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LegalEntity'
        "400":
          description: Invalid value
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LegalEntity'
      security:
      - jwt: []
  /api/v1/lease/{leaseId}:
    get:
      tags:
      - ownership
      summary: Find lease by ID
      description: Returns a single lease
      operationId: getLeaseById
      parameters:
      - name: leaseId
        in: path
        description: ID of lease to return
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lease'
        "400":
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lease'
        "404":
          description: Lease not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lease'
      security:
      - jwt: []
    delete:
      tags:
      - ownership
      summary: Deletes a lease
      operationId: deleteLease
      parameters:
      - name: leaseId
        in: path
        description: Lease id to delete
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "400":
          description: Invalid lease value
      security:
      - jwt: []
  /api/v1/lease/find:
    get:
      tags:
      - ownership
      summary: Finds Leases
      operationId: findLeases
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lease'
        "400":
          description: Invalid value
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lease'
      security:
      - jwt: []
  /api/v1/digitalSkyServiceProvider/find:
    get:
      tags:
      - digitalSkyServiceProviders
      - digitalSkyServiceProvider
      summary: Finds DigitalSkyServiceProviders
      operationId: findDigitalSkyServiceProviders
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DigitalSkyServiceProvider'
        "400":
          description: Invalid value
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DigitalSkyServiceProvider'
      security:
      - jwt: []
  /api/v1/civilAviationAuthority/find:
    get:
      tags:
      - civilAviationAuthorities
      - civilAviationAuthority
      summary: Finds CivilAviationAuthorities
      operationId: findCivilAviationAuthorities
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CivilAviationAuthority'
        "400":
          description: Invalid value
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CivilAviationAuthority'
      security:
      - jwt: []
components:
  schemas:
    Address:
      required:
      - city
      - country
      - id
      - line1
      - line2
      - line3
      - pinCode
      - state
      type: object
      properties:
        id:
          type: string
          format: uuid
        line1:
          type: string
          example: 123 ABC Housing Society
        line2:
          type: string
          example: Landmark
        line3:
          type: string
          example: Bandra West
        city:
          type: string
          example: Mumbai
        state:
          type: string
          enum:
          - ANDHRA_PRADESH
          - ARUNACHAL_PRADESH
          - ASSAM
          - BIHAR
          - CHHATTISGARH
          - GOA
          - GUJARAT
          - HARYANA
          - HIMACHAL_PRADESH
          - JHARKHAND
          - KARNATAKA
          - KERALA
          - MADHYA_PRADESH
          - MAHARASHTRA
          - MANIPUR
          - MEGHALAYA
          - MIZORAM
          - NAGALAND
          - ODISHA
          - PUNJAB
          - RAJASTHAN
          - SIKKIM
          - TAMIL_NADU
          - TELANGANA
          - TRIPURA
          - UTTARAKHAND
          - UTTAR_PRADESH
          - WEST_BENGAL
          - ANDAMAN_NICOBAR_ISLANDS
          - CHANDIGARH
          - DADRA_NAGAR_HAVELI_DAMAN_DIU
          - NCT
          - JAMMU_KASHMIR
          - LADAKH
          - LAKSHADWEEP
          - PUDUCHERRY
        pinCode:
          type: string
          example: "400000"
        country:
          type: string
          example: IND
          enum:
          - IND
          - USA
    ObjectTimestamps:
      required:
      - created
      - updated
      type: object
      properties:
        created:
          type: string
          format: date-time
        updated:
          type: string
          format: date-time
    User:
      required:
      - email
      - firstName
      - id
      - lastName
      - timestamps
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          example: e66b7c9e-79f5-44b0-9642-59ca20b7af63
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        phone:
          type: string
          example: +919999999999
        aadharId:
          type: string
          example: +919999999999
        address:
          $ref: '#/components/schemas/Address'
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
        status:
          type: string
          description: User Status
          example: ACTIVE
          enum:
          - ACTIVE
          - INACTIVE
    LegalEntity:
      required:
      - cin
      - id
      - name
      - regdAddress
      - timestamps
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        cin:
          type: string
          example: CIN00000
        name:
          type: string
          example: Test Company Pvt Ltd
        regdAddress:
          $ref: '#/components/schemas/Address'
        gstin:
          type: string
          example: GSTIN00000
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
    Manufacturer:
      required:
      - id
      - legalEntity
      - timestamps
      - validity
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        legalEntity:
          $ref: '#/components/schemas/LegalEntity'
        validity:
          $ref: '#/components/schemas/Validity'
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
    Uas:
      required:
      - id
      - oem_serial_number
      - status
      - timestamps
      - type
      type: object
      properties:
        humanReadableId:
          $ref: '#/components/schemas/Uas'
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          $ref: '#/components/schemas/UasType'
        oem_serial_number:
          maxLength: 12
          minLength: 6
          type: string
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
        status:
          type: string
          enum:
          - REGISTERED
          - ACTIVE
          - GROUNDED
    UasType:
      required:
      - approved
      - id
      - manufacturer
      - model_number
      - mtow
      - propulsionCategory
      - supportedOperationCategories
      - timestamps
      - weightCategory
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        model_number:
          type: string
          readOnly: true
        manufacturer:
          $ref: '#/components/schemas/Manufacturer'
        propulsionCategory:
          type: string
          enum:
          - VTOL
          - FIXED_WING
          - HYBRID
        weightCategory:
          type: string
          enum:
          - NANO
          - SMALL
          - MICRO
          - MEDIUM
          - LARGE
        mtow:
          type: number
          description: maximum take off weight in kilograms
          format: float
        photoUrl:
          type: string
          format: uri
          example: https://ispirt.github.io/pushpaka/
        approved:
          type: boolean
          readOnly: true
        supportedOperationCategories:
          type: array
          items:
            type: string
            enum:
            - C1
            - C2
            - C3
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
    Validity:
      required:
      - from
      type: object
      properties:
        from:
          type: string
          format: date-time
        till:
          type: string
          format: date-time
    Trader:
      required:
      - id
      - legalEntity
      - timestamps
      - validity
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        legalEntity:
          $ref: '#/components/schemas/LegalEntity'
        validity:
          $ref: '#/components/schemas/Validity'
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
    Sale:
      required:
      - holding
      - id
      - timestamps
      - uas
      - validity
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
        validity:
          $ref: '#/components/schemas/Validity'
        seller_user:
          $ref: '#/components/schemas/User'
        seller_legal_entity:
          $ref: '#/components/schemas/LegalEntity'
        buyer_user:
          $ref: '#/components/schemas/User'
        buyer_legal_entity:
          $ref: '#/components/schemas/LegalEntity'
        uas:
          $ref: '#/components/schemas/Uas'
        holding:
          type: boolean
    RepairAgency:
      required:
      - id
      - legalEntity
      - timestamps
      - validity
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        legalEntity:
          $ref: '#/components/schemas/LegalEntity'
        validity:
          $ref: '#/components/schemas/Validity'
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
    Pilot:
      required:
      - id
      - timestamps
      - user
      - validity
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
        validity:
          $ref: '#/components/schemas/Validity'
    Operator:
      required:
      - id
      - legalEntity
      - timestamps
      - validity
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        legalEntity:
          $ref: '#/components/schemas/LegalEntity'
        validity:
          $ref: '#/components/schemas/Validity'
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
    Lease:
      required:
      - id
      - timestamps
      - validity
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
        validity:
          $ref: '#/components/schemas/Validity'
    DigitalSkyServiceProvider:
      required:
      - id
      - legalEntity
      - timestamps
      - validity
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        legalEntity:
          $ref: '#/components/schemas/LegalEntity'
        validity:
          $ref: '#/components/schemas/Validity'
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
    CivilAviationAuthority:
      required:
      - country
      - id
      - legalEntity
      - timestamps
      - validity
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        legalEntity:
          $ref: '#/components/schemas/LegalEntity'
        validity:
          $ref: '#/components/schemas/Validity'
        timestamps:
          $ref: '#/components/schemas/ObjectTimestamps'
        country:
          type: string
          enum:
          - IND
          - USA
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
