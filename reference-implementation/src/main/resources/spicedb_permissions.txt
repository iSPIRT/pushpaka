
  /** user represents a user */
  definition user {}

  /** legal entity */
  definition legal_entity {}

  /** platform entity */
  definition platform {
  	relation administrator: user
  	permission super_admin = administrator
  }

  /** regulator */
  definition caa {
  	relation platform: platform
  	relation administrator: user
  	permission super_admin = administrator + platform->super_admin
  }

  /** pilot */
  definition pilot {
  	relation flight_operator: user
  	relation regulator: caa
  	permission flight_operations_admin = flight_operator
  	permission approve = regulator->super_admin
  }

  /** producer of uas and uas types */
  definition manufacturer {
  	relation administrator: user
  	relation regulator: caa
  	permission super_admin = administrator
  	permission approve = regulator->super_admin
  	permission commission_uas = super_admin
  	permission register_uastype = super_admin
  }

  /** operator who can operate multiple uas */
  definition operator {
  	relation administrator: user
  	relation regulator: caa
  	relation pilot: pilot
  	permission super_admin = administrator
  	permission flight_operations_admin = pilot->flight_operations_admin
  	permission approve = regulator->super_admin
  	permission add_pilot = super_admin
  	permission remove_pilot = super_admin
  	permission update_flightplan = flight_operations_admin
  	permission delete_flightplan = flight_operations_admin
  	permission execute_flightplan = flight_operations_admin
  	permission submit_flightlog = flight_operations_admin
  	permission submit_incidentreport = flight_operations_admin
  }

  /**
   * defines relationships of uas with regulator , manufacturer and who can own it
   */
  definition uas {
  	relation manufacturer: manufacturer
  	relation regulator: caa
  	relation owner: operator | pilot
  	permission read_uas = manufacturer->super_admin + regulator->super_admin + owner->super_admin + owner->flight_operations_admin
  	permission decommision_uas = manufacturer->super_admin + regulator->super_admin + owner->super_admin + owner->flight_operations_admin
  }

  /** defines relationships of uastype with regulator and manufacturer */
  definition uastype {
  	relation manufacturer: manufacturer
  	relation regulator: caa
  	permission read_uastype = manufacturer->super_admin + regulator->super_admin
  	permission discontinue_uastype = manufacturer->super_admin + regulator->super_admin
  	permission approve = regulator->super_admin
  }

  /** dssp */
  definition dssp {
  	relation administrator: user
  	relation regulator: caa
  	permission super_admin = administrator
  	permission approve = regulator->super_admin
  }

  /** trader */
  definition trader {
  	relation administrator: user
  	relation regulator: caa
  	permission super_admin = administrator
  	permission approve = regulator->super_admin
  }

  /** repair agencies */
  definition repairagency {
  	relation administrator: user
  	relation regulator: caa
  	permission super_admin = administrator
  	permission approve = regulator->super_admin
  }

